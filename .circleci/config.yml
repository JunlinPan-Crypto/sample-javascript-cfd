# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  # The Node.js orb contains a set of prepackaged CircleCI configuration you can utilize
  # Orbs reduce the amount of configuration required for common tasks.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/node
  node: circleci/node@5.0.2
  heroku: circleci/heroku@1.2.6


jobs:
  build_and_test: # this can be any name you choose
    executor: node/default # use the default executor defined within the orb
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          command: npm run test:unit
          name: Run tests
      - run:
          command: npm run build
          name: Build app
      - persist_to_workspace:
          root: ~/project
          paths:
            - .
  deploy: # this can be any name you choose
    executor: heroku/default
    steps:
      - attach_workspace:
          at: ~/project
      - heroku/deploy-via-git:
          force: true # force push when pushing to the heroku remote, see: https://devcenter.heroku.com/articles/git
    
    
  # # Below is the definition of your job to test your Node app. You can rename and customize it as you want.
  # test:
  #   # These next lines define a docker executor: https://circleci.com/docs/2.0/executor-types/
  #   # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
  #   # A list of available CircleCI docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/node
  #   docker:
  #     - image: cimg/node:15.1
  #   # Then run your tests!
  #   # CircleCI will report the results back to your VCS provider.
  #   steps:
  #     # Checkout the code as the first step.
  #     - checkout
  #     # Next, the node orb's install-packages step will install the dependencies from a package.json.
  #     # The orb install-packages step will also automatically cache them for faster future runs.
  #     - node/install-packages
  #     # If you are using yarn instead npm, remove the line above and uncomment the two lines below.
  #     # - node/install-packages:
  #     #     pkg-manager: yarn
  #     - run:
  #         name: Run tests
  #         command: npm test

workflows:
  build_test_deploy: # this can be any name you choose
    jobs:
      - build_and_test
      - deploy:
          requires:
            - build_and_test # only deploy if the build_and_test job has completed
          filters:
            branches:
              only: main # only deploy when on main
  # Below is the definition of your workflow.
  # Inside the workflow, you provide the jobs you want to run, e.g this workflow runs the build-and-test job above.
  # CircleCI will run this workflow on every commit.
  # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows
  # sample:
  #   jobs:
  #     - test
  #     # For running simple node tests, you could optionally instead use the node/test job from the orb to replicate and replace the manually defined "test" job above in fewer lines.
  #     # - node/test